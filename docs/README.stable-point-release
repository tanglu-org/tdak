Rough Guide to doing Stable Point Releases in Debian
----------------------------------------------------

- sudo to dak
- bash:
suite=stable
suitename=jessie
pusuite=proposed-updates
oldrev=8.1
newrev=8.2
export SCRIPTVARS=/srv/ftp-master.debian.org/dak/config/debian/vars
. $SCRIPTVARS
. "${configdir}/common"
. "${configdir}/dinstall.functions"
umask 022
export LANG=C
export LC_ALL=C
pg_timestamp pre_${suite}_${newrev}
cd ~
mkdir -p ${suite}_${newrev}
cd ${suite}_${newrev}
dak control-suite -l ${pusuite} > ${pusuite}.list
dak control-suite -l ${suite} > ${suite}.list

- ask SRMs if there is anything to be skipped from this release. If so
  edit ${pusuite}.list (and later the Changelog too)
- bash:
skip="squid3 icedove php5"
if [ -n "${skip}" ]; then
  mv ${pusuite}.list ${pusuite}.list.ori
  grep -vFf <(dak ls -f heidi -S -s ${pusuite} ${skip}) ${pusuite}.list.ori > ${pusuite}.list
fi
dak make-changelog -s ${pusuite} -b ${suite} | cat - ${ftpdir}/dists/${suite}/ChangeLog | sponge ${ftpdir}/dists/${suite}/ChangeLog
if [ -n "${skip}" ]; then
  $EDITOR ${ftpdir}/dists/${suite}/ChangeLog
fi

dak control-suite --add ${suite} < ${pusuite}.list
dak control-suite --remove ${pusuite} < ${pusuite}.list

- clean up *.changes from proposed-updates:
# Be careful if uploads were not included in the point release.
pumorguedir="${base}/morgue/queues/$(date +%Y/%m)"
mkdir -p "${pumorguedir}"
cd ${ftpdir}/dists/${pusuite}
mv -t "${pumorguedir}" -n -- *.changes

- -r0 additions?
  For example new d-i. If so:
cd ~/${suite}_${newrev}
cp /srv/release.debian.org/www/${suitename}/${newrev%%.*}/${newrev}/${suitename}-r0-additions.cs .
dak control-suite --add ${suitename}-r0 < ${suitename}-r0-additions.cs

- sync with stable RM if there is any propup needed. do it, if so:
cp /srv/release.debian.org/www/${suitename}/${newrev%%.*}/${newrev}/propups.unstable .
dak control-suite --force --add unstable <propups.unstable
cp /srv/release.debian.org/www/${suitename}/${newrev%%.*}/${newrev}/propups.testing .
dak control-suite --force --add testing <propups.testing

- ask rms if they have RMs to do.
- and then check if they have a d-i update. if so, bash:
# set dioldver to "empty" if there is no old to remove
diver=20150422+deb8u2
dak copy-installer -s ${pusuite} -d ${suite} ${diver}
dioldver=20150422+deb8u1
if [ "${dioldver}" != "empty" ]; then
    cd $ftpdir/dists/${suite}/main
    for iarch in $(dak admin s-a list-arch ${suite}); do
        if [ -d "installer-${iarch}/${dioldver}" ]; then
            echo "Moving installer-${iarch}/${dioldver} to morgue"
            mkdir -p "${base}/morgue/d-i/installer-${iarch}/"
            mv "installer-${iarch}/${dioldver}" "${base}/morgue/d-i/installer-${iarch}/"
        fi
    done

    # Remove old version also from proposed-updates
    cd $ftpdir/dists/${pusuite}/main
    for iarch in $(dak admin s-a list-arch ${suite}); do
        rm -rf -- "installer-${iarch}/${dioldver}"
    done
fi
cd $ftpdir/dists/${suite}

- Updates for win32-loader?
cd ${ftpdir}/tools/win32-loader
if [ -d ${suitename}-proposed-updates ]; then
    rm -r ${suite}
    mv ${suitename}-proposed-updates ${suite}
fi
cd ${ftpdir}

- Update version number in README, README.html and dists/README,
  Clean up dists/stable/ChangeLog (add header, basically). bash:

cd ${ftpdir}/dists/${suite}

date_long=$(date "+%A, %-dth %B %Y" | sed 's/1th/1st/; s/2th/2nd/; s/3th/3rd/')
date_iso=$(date "+%Y-%m-%d")
date_short=$(date "+%a, %d %b %Y")
sed -e "1i======================================\n${date_short} - Debian ${newrev} released\n======================================" -i ChangeLog
sed -e "/^${suite}/ s/Debian ${oldrev}/Debian ${newrev}/" -i ../README
sed -e "s/Debian ${oldrev}/Debian ${newrev}/g; /Debian ${newrev}/ s/released .*\\./released ${date_long}./" -i ../../README
sed -e "s/Debian ${oldrev}/Debian ${newrev}/g; /Debian ${newrew}/ s/released .*\\./released ${date_long}./; /meta name=\"Modified\"/ s/content=\".*\"/content=\"${date_iso}\"/" -i ../../README.html

# Inspect changes. Regular expressions might be a bit fragile.
$EDITOR ChangeLog ../README ../../README ../../README.html
rm -f -- ./*~ ../*~ ../../*~

- Update the 'Debian<n>.<n>r<n>' symlink in dists/
cd $ftpdir/dists/
rm -f Debian${oldrev}
ln -s ${suitename} Debian${newrev}

- Update fields in suite table in postgresql.
  bash:

mdate=$(date +"%d %B %Y")
psql projectb <<EOF
begin;
update suite set version = '${newrev}' where suite_name = '${suite}';
update suite set description = 'Debian ${newrev} Released ${mdate}' where suite_name = '${suite}';
commit;
EOF

- prepare for gps. bash:
dak dominate --force -s ${suite}
- check output from cruft report:
dak cruft-report -s ${suite}
- if cruft was removed: go back to run dominate again

- Let SRM see if all is ok

- then:
dak generate-packages-sources2 --force -s ${suite} && dak contents generate -f -s ${suite} -a ftp-master

- For wheezy: update main/i18n/Index
if [[ ${suitename} == wheezy ]]; then
  ${scriptsdir}/generate-i18n-Index "${ftpdir}/dists/${suite}"
fi

- Generate Releases:
dak generate-releases -f -s ${suite} ${pusuite}
# Remove InRelease: Release can be signed by both ftpmaster & stable release keys
rm ${ftpdir}/dists/${suite}/InRelease

- have the SRMs sign it and put the signature in.
cd ${ftpdir}/dists/${suite}
cat /srv/release.debian.org/www/${suitename}/${newrev%%.*}/${newrev}/Release.gpg >> Release.gpg
gpg --no-default-keyring --keyring /usr/share/keyrings/debian-archive-keyring.gpg --trust-model=always --verify Release.gpg Release

- Check if a mirror push is needed or next dinstall is enough. for a push
o if so, bash:

TRACEFILE="${ftpdir}/project/trace/ftp-master.debian.org"
DATE_SERIAL=$(date +"%Y%m%d01")
FILESOAPLUS1=$(awk '/serial/ { print $3+1 }' ${TRACEFILE} )
if [ "$DATE_SERIAL" -gt "$FILESOAPLUS1" ]; then
    SERIAL="$DATE_SERIAL"
else
    SERIAL="$FILESOAPLUS1"
fi
date -u > ${TRACEFILE}
echo "Using dak v1" >> ${TRACEFILE}
echo "Running on host: $(hostname -f)" >> ${TRACEFILE}
echo "Archive serial: ${SERIAL}" >> ${TRACEFILE}
cd ${mirrordir}
rsync -aH --link-dest ${ftpdir} --delete --delete-after --ignore-errors ${ftpdir}/. .
date -u > /srv/ftp.debian.org/web/mirrorstart
echo "Using dak v1" >> /srv/ftp.debian.org/web/mirrorstart
echo "Running on host $(hostname -f)" >> /srv/ftp.debian.org/web/mirrorstart
sudo -H -u archvsync /home/archvsync/runmirrors > ~dak/runmirrors.log 2>&1 &

