#!/bin/bash
#
# Executed daily via cron, out of dak's crontab.

set -e
set -o pipefail
export SCRIPTVARS=/srv/security-master.debian.org/dak/config/debian-security/vars
. $SCRIPTVARS

LOCKFILE="$lockdir/unchecked.lock"

################################################################################

# Fix overrides

rsync --delete -r --include=override\* --exclude=\* --password-file /srv/security-master.debian.org/s3kr1t/rsync-password -ql security-master@ftp-master::indices/ $overridedir

cd $overridedir
for file in override*.gz; do
    zcat -- "$file" > "${file%.gz}"
done
find . -maxdepth 1 -mindepth 1 -type l -delete

for suite in oldstable stable testing; do
    case $suite in
        oldstable) override_suite=wheezy  ;;
        stable)    override_suite=jessie  ;;
        testing)   override_suite=stretch ;;
        *) echo "Unknown suite type ($suite)"; exit 1;;
    esac
    for component in $components; do
        for override_type in $override_types; do
            case $override_type in
                deb) type="" ;;
                dsc) type=".src" ;;
                udeb) type=".debian-installer" ;;
            esac

            if [ "$override_type" = "udeb" ]; then
                if [ ! "$component" = "main" ]; then
                    continue
                fi
            fi

            OFILE="override.$override_suite.$component$type.gz"
            if [ -r "$OFILE" ]; then
                zcat "$OFILE" | dak control-overrides -q -a -t $override_type -s $suite -c updates/$component
            fi
        done
    done
done

################################################################################

cd $configdir
dak import-keyring -L /srv/keyring.debian.org/keyrings/debian-keyring.gpg

cleanup() {
    rm -f "$LOCKFILE"
}

if ! lockfile -r100 "$LOCKFILE"; then
    echo "Could not lock $LOCKFILE." >&2
    exit 1
fi
trap cleanup EXIT

dak clean-queues -i ${unchecked}
dak clean-queues -i $disembargo
dak clean-suites

cleanup
trap - EXIT

symlinks -d -r $ftpdir

pg_file="${base}/dak-backup/dump_$(date +%Y.%m.%d-%H:%M:%S)"
pg_dump obscurity > "${pg_file}"
nice xz -9 "${pg_file}"

find "${base}/dak-backup" -mtime +30 \! -name '.nobackup' -delete

################################################################################
